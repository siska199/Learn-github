Tiga jenis version control: 
1. local : hanya di local computer kita
2. centralized : solusi for team work project -->tergantung sekali dengn server
3. distributed : example : git or mercurial dll

Configurasi di dalam git:
>>git config --global user.name "Siska Apriana Rifianti"
>>git config --global user.email "siska.apriana@ai.astra.co.id"
hal ini dilakukan dengan tujuan untuk mengetahui siapa pembuat perubahan

repository merupakan sebutan project di git

How to make repository:
1. masuk kedalam repository 
2. gunakan perintah >>git init

Three state in github:
1. modified --> namun belum disimpan secara permanen di repository
2. staged --> menandai bahwa file yang akan kita modified akan di simpan secara permanen ke repository
3. commited --> artinya data sudah aman disimpan di repository 


Three section in git:
working diectory, staging area, and repository.

Snapshot:
snapshot berisi semua perubahan yang kita commit dan setiap 
snapshot akan menghasilkan hash. Hash dibutuhkan untuk menjaga data integritynya.
Setelah di commit kita tidak bisa melakukan perubahan lagi di commit tersebut.

HEAD:
HEAD merupakan pinter ke commit / hash yang paling akhir

Menambah file ke repository:
-->untracked file artinya "ada file baru nih"
>>git add [filename]
>>git commit -m "..."

Mengubah File:
1. Lakukan perubahan pada file yang diinginkan
Cara melihat perubahan:
>>git diff [nama file]

Menghapus file:
1. Langsung hapus filenya terus lakukan add and commit

Membatalkan penambahan file:
>>git clean -f (ini masih ada dalam working directory)

Membatalkan perubahan file:
>>git restore [nama file] (ini masih di working directory)

Membatalkan dari stagging index:
--Perintah git restore hanya bisa dilakukan di state Working directory
--Artinya perubahan yang terlanjur masuk ke staging index untuk dibatalkan tidak bisa dilakukan secara langusng dari staging index
--Kita perlu mengembalikan posisi dari staging index ke working directory terlebih dahulu dengancara: 
>>git restore --stages [nama file]


